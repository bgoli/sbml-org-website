## ============================================================================
## File name   : admin/config.cfg
## Description : General and environment variables for SBML.org Hugo-based site
## Author(s)   : Michael Hucka <mhucka@caltech.edu>
## Organization: California Institute of Technology
## Date created: 2019-03-19
##
## THIS FILE MUST BE EDITED TO CONFIGURE THE SERVER.
## The default settings only work for creating a local instance for testing.
## ============================================================================

# Public site configuration.
# .............................................................................

SITE_ROOT="$(pwd)/../site"
SITE_URL=
SITE_IP=
SITE_PORT=


# System process configuration
# .............................................................................
# Note: we don't run Hugo as root. To have Hugo bind to port 80 as a non-root
# user, it's necessary to use setcap on the hugo binary (our approach) or
# create a redirection via iptables.  However, that means the hugo binary
# can't write to /var/log and /var/run unless separate subdirectories are
# pre-created.  On MacOS, if you create /var/run/hugo and reboot, the
# directory will get deleted.  That in turn means either you have to figure
# out how to automate recreating it at every boot, or else you choose to
# write the log and pid files somewhere else.  For this reason, the default
# location for the log and pid file is a directory local to the installation
# of sbml.org.)

# Where do we write the pid file on this system?
PID_FILE="$(pwd)/../run/hugo.pid"

# Where do we write the Hugo log output?  Note: Hugo doesn't support system
# logging via rsyslog, so we have to define the output log explicitly.
LOG_FILE="$(pwd)/../run/hugo.log"

# What is the user identity of the hugo server process?
PROCESS_OWNER=hugo


# Hugo server configuration
# .............................................................................

HUGO="/usr/local/bin/hugo"

# Note #1: we don't run Hugo as root. To have Hugo bind to port 80 as a non-root
# user, it's necessary to use setcap on the hugo binary (our approach) or
# create a redirection via iptables.  However, that means the hugo binary can't
# write to /var/log and /var/run unless separate subdirectories are precreated.
#
# Note #2: the value of HUGO_CACHEDIR must end with a '/'.
HUGO_CACHEDIR="$(pwd)/../run/hugo_cache/"
HUGO_OUTPUTDIR="$(pwd)/../run/hugo_output/"

# For production use, REMOVE --disableFastRender --noHTTPCache --templateMetrics
# and ADD --ignoreCache. The latter is because without it, you get bad data if
# the google spreadsheet for SBML package is changed.
if [[ -n $SITE_URL ]]; then
    SERVER_ARGS="--ignoreCache --bind=$SITE_IP --baseURL=$SITE_URL --port $SITE_PORT"
else
    SERVER_ARGS="--disableFastRender --noHTTPCache --templateMetrics"
fi

# Note: you would think that using the --logFile argument would be a smart
# way of writing Hugo's output to a log file. YOU WOULD BE WRONG, because
# Hugo doesn't all its messages to the file given by --logFile.  Some
# messages are always printed to the terminal.  So, we don't use --logFile
# here, because it's kind of useless, and instead, our control script
# redirects output to a log file explicitly.
HUGO_ARGS="--cacheDir $HUGO_CACHEDIR --destination $HUGO_OUTPUTDIR"
HUGO_ARGS+=" "
HUGO_ARGS+="--verbose --renderToDisk --cleanDestinationDir"
HUGO_ARGS+=" "
HUGO_ARGS+=$OUTPUT_ARGS
HUGO_ARGS+=" "
HUGO_ARGS+=$SERVER_ARGS


# Miscellaneous parameters.
# .............................................................................

# Seconds to wait between stop and start when doing a restart.
RESTART_PAUSE=5
