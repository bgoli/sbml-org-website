/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sbml.libsbml;

/** 
 * <span class="pkg-marker pkg-color-fbc"><a href="group__fbc.html">fbc</a></span>
 Extension of {@link Model}.
 <p>
 * The {@link FbcModelPlugin} object is used to extend the standard SBML {@link Model} object
 * with features used in the SBML Level&nbsp;3 <a href='../../../extensions-summary.html#fbc'>Flux Balance Constraints</a> (&ldquo;fbc&rdquo;)
 * package.  In Version&nbsp;1 of the &ldquo;fbc&rdquo; specification, the
 * extended {@link Model} class has two optional subobjects: {@link ListOfObjectives} and
 * {@link ListOfFluxBounds}.  In Version&nbsp;2 of the specification, the extended
 * {@link Model} object is defined differently: it is extended with a new required
 * attribute named 'strict', and the two optional subobjects {@link ListOfObjectives}
 * and {@link ListOfGeneProducts}.  (ListOfFluxBounds is not used in Version&nbsp;2.)
 <p>
 * <h2>The 'strict' attribute on the (extended) {@link Model} class</h2>
 <p>
 * The mandatory attribute 'strict', of type <code>boolean</code>, in 
 * Version&nbsp;2 of this package, is used to
 * apply an additional set of restrictions to the model.  The 'strict'
 * attribute helps ensure that the Flux Balance Constraints package can be
 * used to encode legacy flux-balance analysis models expressible as Linear
 * Programs (LP's) for software that is unable to analyze arbitrary
 * mathematical expressions that may appear in an SBML model.  In addition, a
 * 'strict' model is fully described and mathematically consistent, for
 * example, by ensuring that all fluxes have a valid upper or lower bound.
 <p>
 * The following restrictions are in effect if an &ldquo;fbc&rdquo; model
 * object has a value of <code>'true'</code> for the attribute 'strict' on
 * Model:
 <p>
 * <ul>
 * <li> Each {@link Reaction} in a {@link Model} must define values for the attributes
 * 'lowerFluxBound' and 'upperFluxBound', with each attribute pointing to a
 * valid {@link Parameter} object defined in the current {@link Model}.
 <p>
 * <li> Each {@link Parameter} object referred to by the {@link Reaction} attributes
 * 'lowerFluxBound' and 'upperFluxBound' must have its 'constant' attribute
 * set to the value <code>'true'</code> and its 'value' attribute set to a
 * value of type <code>double</code>.  This value may not be
 * <code>'NaN'</code>.
 <p>
 * <li> {@link SpeciesReference} objects in {@link Reaction} objects must have their
 * 'stoichiometry' attribute set to a <code>double</code> value that is not
 * <code>'NaN'</code>, nor <code>'-INF'</code>, nor <code>'INF'</code>. In
 * addition, the value of their 'constant' attribute must be set to
 * <code>'true'</code>.
 <p>
 * <li> {@link InitialAssignment} objects may not target the {@link Parameter} objects
 * referenced by the {@link Reaction} attributes 'lowerFluxBound' and
 * 'upperFluxBound', nor any {@link SpeciesReference} objects.
 <p>
 * <li> All defined {@link FluxObjective} objects must have their coefficient
 * attribute set to a <code>double</code> value that is not
 * <code>'NaN'</code>, nor <code>'-INF'</code>, nor <code>'INF'</code>.
 <p>
 * <li> A {@link Reaction} 'lowerFluxBound' attribute may not point to a {@link Parameter}
 * object that has a value of <code>'INF'</code>.
 <p>
 * <li> A {@link Reaction} 'upperFluxBound' attribute may not point to a {@link Parameter}
 * object that has a value of <code>'-INF'</code>.
 <p>
 * <li> For all {@link Reaction} objects, the value of a 'lowerFluxBound' attribute
 * must be less than or equal to the value of the 'upperFluxBound' attribute.
 *
 * </ul> <p>
 * While it is not compulsory for a 'strict' Flux Balance Constraints model
 * to define an {@link Objective}, doing so does does allow the model to be
 * formulated as a Linear Program and optimized.  However, this decision is
 * left to the modeler.  Note that all other properties of the objects
 * referred to in the list above are to be set as specified in the relevant
 * SBML Level&nbsp;3 Version&nbsp;1 Core and <a href='../../../extensions-summary.html#fbc'>Flux Balance Constraints</a> (&ldquo;fbc&rdquo;)
 * specifications.
 <p>
 * Alternatively, if the value of the strict attribute is
 * <code>'false'</code>, then none of these restrictions apply and the model
 * creator can choose to define &ldquo;fbc&rdquo; models that are not
 * necessarily encodable as an LP.  For example, if strict is
 * <code>'false'</code>, the {@link InitialAssignment} construct may be used to set
 * any valid numerical entity, including {@link Parameter} values and stoichiometric
 * coefficients, with any value of type <code>double</code>.  In addition,
 * {@link Parameter} elements are no longer required to be flagged as constant, thus
 * allowing for a Flux Balance Constraints model's use in alternative, hybrid
 * modeling strategies.
 <p>
 * <h2>Lists of subobjects on the (extended) {@link Model} class</h2>
 <p>
 * The {@link ListOfObjectives} is used to define the objectives of a given
 * &ldquo;fbc&rdquo; model.  Objectives generally consist of linear
 * combinations of model variables (fluxes) and a direction for the
 * optimality constraint (either maximization or minimization).  Each
 * {@link Objective} has a {@link ListOfFluxObjectives} subobjects.
 <p>
 * In Version&nbsp;2 of &ldquo;fbc&rdquo;, the {@link ListOfGeneProducts} is used to
 * define the gene products represented by the &ldquo;fbc&rdquo; model.
 <p>
 * In Version&nbsp;1 of &ldquo;fbc&rdquo;, there is no {@link ListOfGeneProducts},
 * and instead, {@link Model} can have an optional {@link ListOfFluxBounds}.
 <p>
 * @see Objective
 * @see FluxObjective
 * @see FluxBound
 */

public class FbcModelPlugin extends SBasePlugin {
   private long swigCPtr;

   protected FbcModelPlugin(long cPtr, boolean cMemoryOwn)
   {
     super(libsbmlJNI.FbcModelPlugin_SWIGUpcast(cPtr), cMemoryOwn);
     swigCPtr = cPtr;
   }

   protected static long getCPtr(FbcModelPlugin obj)
   {
     return (obj == null) ? 0 : obj.swigCPtr;
   }

   protected static long getCPtrAndDisown (FbcModelPlugin obj)
   {
     long ptr = 0;

     if (obj != null)
     {
       ptr             = obj.swigCPtr;
       obj.swigCMemOwn = false;
     }

     return ptr;
   }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libsbmlJNI.delete_FbcModelPlugin(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  
/**
   * Creates a new {@link FbcModelPlugin} object using the given parameters.
   <p>
   * <p>
 * In the XML representation of an SBML document, XML namespaces are used to
 * identify the origin of each XML construct used.  XML namespaces are
 * identified by their unique resource identifiers (URIs).  The core SBML
 * specifications stipulate the namespaces that must be used for core SBML
 * constructs; for example, all XML elements that belong to SBML Level&nbsp;3
 * Version&nbsp;1 Core must be placed in the XML namespace identified by the URI
 * <code>'http://www.sbml.org/sbml/level3/version1/core'</code>.  Individual
 * SBML Level&nbsp;3 packages define their own XML namespaces; for example,
 * all elements belonging to the SBML Level&nbsp;3 Layout Version&nbsp;1
 * package must be placed in the XML namespace
 * <code>'http://www.sbml.org/sbml/level3/version1/layout/version1/'</code>.
   <p>
   * <p>
 * The {@link SBMLNamespaces} object encapsulates SBML Level/Version/namespaces
 * information.  It is used to communicate the SBML Level, Version, and (in
 * Level&nbsp;3) packages used in addition to SBML Level&nbsp;3 Core.  A
 * common approach to using libSBML's {@link SBMLNamespaces} facilities is to create an
 * {@link SBMLNamespaces} object somewhere in a program once, then hand that object
 * as needed to object constructors that accept {@link SBMLNamespaces} as arguments.
   <p>
   * @param uri the URI of the SBML Level&nbsp;3 package implemented by
   * this libSBML package extension.
   <p>
   * @param prefix the XML namespace prefix being used for the package.
   <p>
   * @param fbcns the namespaces object for the package.
   */ public
 FbcModelPlugin(String uri, String prefix, FbcPkgNamespaces fbcns) {
    this(libsbmlJNI.new_FbcModelPlugin__SWIG_0(uri, prefix, FbcPkgNamespaces.getCPtr(fbcns), fbcns), true);
  }

  
/**
   * Copy constructor for {@link FbcModelPlugin}.
   <p>
   * @param orig the {@link FbcModelPlugin} instance to copy.
   */ public
 FbcModelPlugin(FbcModelPlugin orig) {
    this(libsbmlJNI.new_FbcModelPlugin__SWIG_1(FbcModelPlugin.getCPtr(orig), orig), true);
  }

  
/**
   * Creates and returns a deep copy of this {@link FbcModelPlugin} object.
   <p>
   * @return a (deep) copy of this {@link FbcModelPlugin} object.
   */ public
 SBasePlugin cloneObject() {
    long cPtr = libsbmlJNI.FbcModelPlugin_cloneObject(swigCPtr, this);
    return (cPtr == 0) ? null : new FbcModelPlugin(cPtr, true);
  }

  
/** * @internal */ public
 SBase createObject(XMLInputStream stream) {
  return libsbml.DowncastSBase(libsbmlJNI.FbcModelPlugin_createObject(swigCPtr, this, XMLInputStream.getCPtr(stream), stream), false);
}

  
/** * @internal */ public
 int appendFrom(Model model) {
    return libsbmlJNI.FbcModelPlugin_appendFrom(swigCPtr, this, Model.getCPtr(model), model);
  }

  
/** * @internal */ public
 boolean readOtherXML(SBase parentObject, XMLInputStream stream) {
    return libsbmlJNI.FbcModelPlugin_readOtherXML(swigCPtr, this, SBase.getCPtr(parentObject), parentObject, XMLInputStream.getCPtr(stream), stream);
  }

  
/** * @internal */ public
 void addExpectedAttributes(SWIGTYPE_p_ExpectedAttributes attributes) {
    libsbmlJNI.FbcModelPlugin_addExpectedAttributes(swigCPtr, this, SWIGTYPE_p_ExpectedAttributes.getCPtr(attributes));
  }

  
/** * @internal */ public
 void readAttributes(XMLAttributes attributes, SWIGTYPE_p_ExpectedAttributes expectedAttributes) {
    libsbmlJNI.FbcModelPlugin_readAttributes(swigCPtr, this, XMLAttributes.getCPtr(attributes), attributes, SWIGTYPE_p_ExpectedAttributes.getCPtr(expectedAttributes));
  }

  
/** * @internal */ public
 void writeAttributes(XMLOutputStream stream) {
    libsbmlJNI.FbcModelPlugin_writeAttributes(swigCPtr, this, XMLOutputStream.getCPtr(stream), stream);
  }

  
/**
   * Returns the value of the 'strict' attribute of this {@link FbcModelPlugin}.
   <p>
   * <p>
 * @note The 'strict' attribute of the {@link FbcModelPlugin} is only defined for 
 * version&nbsp;2 of the 'Flux Balance Constraints' specification, and has no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @return the value of the 'strict' attribute of this {@link FbcModelPlugin} as a boolean.
   */ public
 boolean getStrict() {
    return libsbmlJNI.FbcModelPlugin_getStrict(swigCPtr, this);
  }

  
/**
   * Predicate returning <code>true</code> if this {@link FbcModelPlugin}'s 'strict' attribute
   * is set.
   <p>
   * <p>
 * @note The 'strict' attribute of the {@link FbcModelPlugin} is only defined for 
 * version&nbsp;2 of the 'Flux Balance Constraints' specification, and has no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @return <code>true</code> if this {@link FbcModelPlugin}'s 'strict' attribute has been set,
   * otherwise <code>false</code> is returned.
   */ public
 boolean isSetStrict() {
    return libsbmlJNI.FbcModelPlugin_isSetStrict(swigCPtr, this);
  }

  
/**
   * Sets the value of the 'strict' attribute of this {@link FbcModelPlugin}.
   <p>
   * <p>
 * @note The 'strict' attribute of the {@link FbcModelPlugin} is only defined for 
 * version&nbsp;2 of the 'Flux Balance Constraints' specification, and has no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param strict boolean value of the 'strict' attribute to be set.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * </ul>
   */ public
 int setStrict(boolean strict) {
    return libsbmlJNI.FbcModelPlugin_setStrict(swigCPtr, this, strict);
  }

  
/**
   * Unsets the value of the 'strict' attribute of this {@link FbcModelPlugin}.
   <p>
   * <p>
 * @note The 'strict' attribute of the {@link FbcModelPlugin} is only defined for 
 * version&nbsp;2 of the 'Flux Balance Constraints' specification, and has no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * </ul>
   */ public
 int unsetStrict() {
    return libsbmlJNI.FbcModelPlugin_unsetStrict(swigCPtr, this);
  }

  
/**
   * Returns the {@link ListOfFluxBounds} in this plugin object.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @return {@link ListOfFluxBounds} object in this plugin object.
   */ public
 ListOfFluxBounds getListOfFluxBounds() {
    long cPtr = libsbmlJNI.FbcModelPlugin_getListOfFluxBounds__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new ListOfFluxBounds(cPtr, false);
  }

  
/**
   * Returns the {@link FluxBound} object that belongs to the given index. If the
   * index is invalid, <code>null</code> is returned.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param n the index number of the {@link FluxBound} to get.
   <p>
   * @return the nth {@link FluxBound} in the {@link ListOfFluxBounds}.
   * If the index <code>n</code> is invalid, <code>null</code> is returned.
   */ public
 FluxBound getFluxBound(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getFluxBound__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new FluxBound(cPtr, false);
  }

  
/**
   * Returns the {@link FluxBound} object based on its identifier.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param sid a string representing the identifier 
   * of the {@link FluxBound} to get.
   <p>
   * @return {@link FluxBound} in the {@link ListOfFluxBounds} with the given <code>sid</code>
   * or <code>null</code> if no such {@link FluxBound} exists.
   <p>
   * @see #getFluxBound(long n)
   * @see #getListOfFluxBounds()
   */ public
 FluxBound getFluxBound(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getFluxBound__SWIG_2(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new FluxBound(cPtr, false);
  }

  
/**
   * Creates a new {@link ListOfFluxBounds} object that contains only the 
   * {@link FluxBound} objects associated with the given {@link Reaction}.  If no such
   * {@link Reaction} can be found, or if there are no {@link FluxBound} objects associated
   * with it, returns null. 
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param reaction the id of an reaction to find {@link FluxBound} objects for.
   <p>
   * @return a {@link ListOfFluxBounds} for the given reaction id.
   */ public
 ListOfFluxBounds getFluxBoundsForReaction(String reaction) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getFluxBoundsForReaction(swigCPtr, this, reaction);
    return (cPtr == 0) ? null : new ListOfFluxBounds(cPtr, false);
  }

  
/**
   * Adds a copy of the given {@link FluxBound} object to the list of FluxBounds.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param bound the {@link FluxBound} object to be added to the list of FluxBounds.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_FAILED LIBSBML_OPERATION_FAILED}
   * <li> {@link libsbmlConstants#LIBSBML_INVALID_OBJECT LIBSBML_INVALID_OBJECT}
   * <li> {@link libsbmlConstants#LIBSBML_LEVEL_MISMATCH LIBSBML_LEVEL_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_VERSION_MISMATCH LIBSBML_VERSION_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_PKG_VERSION_MISMATCH LIBSBML_PKG_VERSION_MISMATCH}
   * </ul>
   */ public
 int addFluxBound(FluxBound bound) {
    return libsbmlJNI.FbcModelPlugin_addFluxBound(swigCPtr, this, FluxBound.getCPtr(bound), bound);
  }

  
/**
   * Creates a new {@link FluxBound} object and adds it to the list of {@link FluxBound} objects
   * and returns it.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @return a newly created {@link FluxBound} object.
   */ public
 FluxBound createFluxBound() {
    long cPtr = libsbmlJNI.FbcModelPlugin_createFluxBound(swigCPtr, this);
    return (cPtr == 0) ? null : new FluxBound(cPtr, false);
  }

  
/**
   * Removes the nth {@link FluxBound} object from this plugin object and
   * returns a pointer to it.
   <p>
   * The caller owns the returned object and is responsible for
   *  deleting it.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param n the index of the {@link FluxBound} object to remove.
   <p>
   * @return the {@link FluxBound} object removed.  As mentioned above, the 
   * caller owns the returned object. <code>null</code> is returned if the 
   * given index is out of range.
   */ public
 FluxBound removeFluxBound(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeFluxBound__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new FluxBound(cPtr, false);
  }

  
/**
   * Removes the {@link FluxBound} object with the given <code>sid</code> attribute from 
   * this plugin object and returns a pointer to it.
   <p>
   * The caller owns the returned object and is responsible for
   * deleting it.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @param sid the id attribute of the {@link FluxBound} object to remove.
   <p>
   * @return the {@link FluxBound} object removed.  As mentioned above, the 
   * caller owns the returned object. <code>null</code> is returned if the 
   * given index is out of range.
   */ public
 FluxBound removeFluxBound(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeFluxBound__SWIG_1(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new FluxBound(cPtr, false);
  }

  
/**
   * Returns the number of {@link FluxBound} object in this plugin object.
   <p>
   * <p>
 * @note {@link FluxBound} objects are only defined for version&nbsp;1
 * of the 'Flux Balance Constraints' specification, and are
 * replaced in version&nbsp;2 by the 'upperFluxBound' and
 * 'lowerFluxBound' attributes of the {@link FbcReactionPlugin}.
   <p>
   * @return the number of {@link FluxBound} object in this plugin object.
   */ public
 long getNumFluxBounds() {
    return libsbmlJNI.FbcModelPlugin_getNumFluxBounds(swigCPtr, this);
  }

  
/**
   * Returns the {@link ListOfObjectives} in this {@link FbcModelPlugin} object.
   <p>
   * @return the {@link ListOfObjectives} child of this {@link FbcModelPlugin}.
   */ public
 ListOfObjectives getListOfObjectives() {
    long cPtr = libsbmlJNI.FbcModelPlugin_getListOfObjectives__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new ListOfObjectives(cPtr, false);
  }

  
/**
   * Get an {@link Objective} from the {@link ListOfObjectives}.
   <p>
   * @param n the index number of the {@link Objective} to get.
   <p>
   * @return the nth {@link Objective} in the {@link ListOfObjectives} within this {@link FbcModelPlugin}.
   * If the index <code>n</code> is invalid, <code>null</code> is returned.
   <p>
   * @see #getNumObjectives()
   */ public
 Objective getObjective(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getObjective__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new Objective(cPtr, false);
  }

  
/**
   * Get an {@link Objective} from the {@link ListOfObjectives}
   * based on its identifier.
   <p>
   * @param sid a string representing the identifier
   * of the {@link Objective} to get.
   <p>
   * @return the {@link Objective} in the {@link ListOfObjectives}
   * with the given id or <code>null</code> if no such
   * {@link Objective} exists.
   <p>
   * 
   * @see #getNumObjectives()
   <p>
   * @see #getObjective(long n)
   */ public
 Objective getObjective(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getObjective__SWIG_2(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new Objective(cPtr, false);
  }

  
/**
   * Adds a copy the given {@link Objective} to this {@link FbcModelPlugin}.
   <p>
   * @param o the {@link Objective} object to add.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_FAILED LIBSBML_OPERATION_FAILED}
   * <li> {@link libsbmlConstants#LIBSBML_INVALID_OBJECT LIBSBML_INVALID_OBJECT}
   * <li> {@link libsbmlConstants#LIBSBML_LEVEL_MISMATCH LIBSBML_LEVEL_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_VERSION_MISMATCH LIBSBML_VERSION_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_PKG_VERSION_MISMATCH LIBSBML_PKG_VERSION_MISMATCH}
   * </ul>
   */ public
 int addObjective(Objective o) {
    return libsbmlJNI.FbcModelPlugin_addObjective(swigCPtr, this, Objective.getCPtr(o), o);
  }

  
/**
   * Get the number of {@link Objective} objects in this {@link FbcModelPlugin}.
   <p>
   * @return the number of {@link Objective} objects in this {@link FbcModelPlugin}.
   */ public
 long getNumObjectives() {
    return libsbmlJNI.FbcModelPlugin_getNumObjectives(swigCPtr, this);
  }

  
/**
   * Creates a new {@link Objective} object, adds it to this {@link FbcModelPlugin}'s
   * {@link ListOfObjectives} and returns the {@link Objective} object created. 
   <p>
   * @return a new {@link Objective} object instance.
   <p>
   * @see #addObjective(Objective o)
   */ public
 Objective createObjective() {
    long cPtr = libsbmlJNI.FbcModelPlugin_createObjective(swigCPtr, this);
    return (cPtr == 0) ? null : new Objective(cPtr, false);
  }

  
/**
   * Removes the nth {@link Objective} from the {@link ListOfObjectives} within this {@link FbcModelPlugin}.
   * and returns a pointer to it.
   <p>
   * The caller owns the returned item and is responsible for deleting it.
   <p>
   * @param n the index of the {@link Objective} to remove.
   <p>
   * @see #getNumObjectives()
   */ public
 Objective removeObjective(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeObjective__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new Objective(cPtr, true);
  }

  
/**
   * Removes the {@link Objective} with the given identifier from the {@link ListOfObjectives} within this {@link FbcModelPlugin}
   * and returns a pointer to it.
   <p>
   * The caller owns the returned item and is responsible for deleting it.
   * If none of the items in this list have the identifier <code>sid</code>, then
   * <code>null</code> is returned.
   <p>
   * @param sid the identifier of the {@link Objective} to remove.
   <p>
   * @return the {@link Objective} removed. As mentioned above, the caller owns the
   * returned item.
   */ public
 Objective removeObjective(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeObjective__SWIG_1(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new Objective(cPtr, true);
  }

  
/** 
   * Returns the current active objective. 
   <p>
   * @return the {@link Objective} pointed to by the 'activeObjective' 
   * attribute, or <code>null</code> if no such {@link Objective} can be found.
   */ public
 Objective getActiveObjective() {
    long cPtr = libsbmlJNI.FbcModelPlugin_getActiveObjective__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Objective(cPtr, false);
  }

  
/** 
   * Sets the id of the active objective.
  <p>
  * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
  * <ul>
  * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
  * <li> {@link libsbmlConstants#LIBSBML_INVALID_ATTRIBUTE_VALUE LIBSBML_INVALID_ATTRIBUTE_VALUE}
  * </ul>
   */ public
 int setActiveObjectiveId(String objectiveId) {
    return libsbmlJNI.FbcModelPlugin_setActiveObjectiveId(swigCPtr, this, objectiveId);
  }

  
/** 
   * Returns the id of the current active objective.
   <p>
   * @return the value of the 'activeObjective' attribute of the {@link ListOfObjectives}.
   */ public
 String getActiveObjectiveId() {
    return libsbmlJNI.FbcModelPlugin_getActiveObjectiveId(swigCPtr, this);
  }

  
/** 
   * Unsets the 'activeObjective' attribute of the {@link ListOfObjectives}.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   *
   * </ul> <p>
   * @return success status
   */ public
 int unsetActiveObjectiveId() {
    return libsbmlJNI.FbcModelPlugin_unsetActiveObjectiveId(swigCPtr, this);
  }

  
/**
   * Returns the {@link ListOfGeneProducts} in this {@link FbcModelPlugin} object.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @return the {@link ListOfGeneProducts} child of this {@link FbcModelPlugin}.
   */ public
 ListOfGeneProducts getListOfGeneProducts() {
    long cPtr = libsbmlJNI.FbcModelPlugin_getListOfGeneProducts__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new ListOfGeneProducts(cPtr, false);
  }

  
/**
   * Get a {@link GeneProduct} from the {@link ListOfGeneProducts}.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param n the index number of the {@link GeneProduct} to get.
   <p>
   * @return the nth {@link GeneProduct} in the {@link ListOfGeneProducts} within this {@link FbcModelPlugin}.
   * If the index <code>n</code> is invalid, <code>null</code> is returned.
   <p>
   * @see #getNumGeneProducts()
   */ public
 GeneProduct getGeneProduct(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getGeneProduct__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, false);
  }

  
/**
   * Get a {@link GeneProduct} from the {@link ListOfGeneProducts}
   * based on its identifier.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param sid a string representing the identifier
   * of the {@link GeneProduct} to get.
   <p>
   * @return the {@link GeneProduct} in the {@link ListOfGeneProducts}
   * with the given id or <code>null</code> if no such
   * {@link GeneProduct} exists.
   <p>
   * 
   * @see #getNumGeneProducts()
   <p>
   * @see #getGeneProduct(long n)
   */ public
 GeneProduct getGeneProduct(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getGeneProduct__SWIG_2(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, false);
  }

  
/**
  * Get a {@link GeneProduct} from the {@link ListOfGeneProducts}
  * based on its label.
  <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
  * @param label a string representing the label
  * of the {@link GeneProduct} to get.
  <p>
  * @return the {@link GeneProduct} in the {@link ListOfGeneProducts}
  * with the given label or <code>null</code> if no such
  * {@link GeneProduct} exists.
  <p>
  * 
  * @see #getNumGeneProducts()
  <p>
   * @see #getGeneProduct(long n)
  */ public
 GeneProduct getGeneProductByLabel(String label) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getGeneProductByLabel(swigCPtr, this, label);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, false);
  }

  
/**
   * Adds a copy the given {@link GeneProduct} to this {@link FbcModelPlugin}.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param gp the {@link GeneProduct} object to add.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_FAILED LIBSBML_OPERATION_FAILED}
   * <li> {@link libsbmlConstants#LIBSBML_INVALID_OBJECT LIBSBML_INVALID_OBJECT}
   * <li> {@link libsbmlConstants#LIBSBML_LEVEL_MISMATCH LIBSBML_LEVEL_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_VERSION_MISMATCH LIBSBML_VERSION_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_PKG_VERSION_MISMATCH LIBSBML_PKG_VERSION_MISMATCH}
   * </ul>
   */ public
 int addGeneProduct(GeneProduct gp) {
    return libsbmlJNI.FbcModelPlugin_addGeneProduct(swigCPtr, this, GeneProduct.getCPtr(gp), gp);
  }

  
/**
   * Get the number of {@link GeneProduct} objects in this {@link FbcModelPlugin}.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @return the number of {@link GeneProduct} objects in this {@link FbcModelPlugin}.
   */ public
 long getNumGeneProducts() {
    return libsbmlJNI.FbcModelPlugin_getNumGeneProducts(swigCPtr, this);
  }

  
/**
   * Creates a new {@link GeneProduct} object, adds it to this {@link FbcModelPlugin}'s
   * {@link ListOfGeneProducts} and returns the {@link GeneProduct} object created. 
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @return a new {@link GeneProduct} object instance.
   <p>
   * @see #addGeneProduct(GeneProduct gp)
   */ public
 GeneProduct createGeneProduct() {
    long cPtr = libsbmlJNI.FbcModelPlugin_createGeneProduct(swigCPtr, this);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, false);
  }

  
/**
   * Removes the nth {@link GeneProduct} from the {@link ListOfGeneProducts} within this {@link FbcModelPlugin}.
   * and returns a pointer to it.
   <p>
   * The caller owns the returned item and is responsible for deleting it.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param n the index of the {@link GeneProduct} to remove.
   <p>
   * @see #getNumGeneProducts()
   */ public
 GeneProduct removeGeneProduct(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeGeneProduct__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, true);
  }

  
/**
   * Removes the {@link GeneProduct} with the given identifier from the {@link ListOfGeneProducts} within this {@link FbcModelPlugin}
   * and returns a pointer to it.
   <p>
   * The caller owns the returned item and is responsible for deleting it.
   * If none of the items in this list have the identifier <code>sid</code>, then
   * <code>null</code> is returned.
   <p>
   * <p>
 * @note {@link GeneProduct} objects are only defined for version&nbsp;2
 * of the 'Flux Balance Constraints' specification, and have no
 * equivalent in version&nbsp;1 of the specification.
   <p>
   * @param sid the identifier of the {@link GeneProduct} to remove.
   <p>
   * @return the {@link GeneProduct} removed. As mentioned above, the caller owns the
   * returned item.
   */ public
 GeneProduct removeGeneProduct(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeGeneProduct__SWIG_1(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new GeneProduct(cPtr, true);
  }

  
/**
   * Returns the {@link ListOfGeneAssociations} annotation object for level 1 in this plugin object.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @return {@link ListOfGeneAssociations} annotation object for level 1 in this plugin object.
   */ public
 ListOfGeneAssociations getListOfGeneAssociations() {
    long cPtr = libsbmlJNI.FbcModelPlugin_getListOfGeneAssociations__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new ListOfGeneAssociations(cPtr, false);
  }

  
/**
   * Returns the {@link GeneAssociation} annotation object that belongs to the given index. If the
   * index is invalid, <code>null</code> is returned.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @param n the index number of the {@link GeneAssociation} annotation to get.
   <p>
   * @return the nth {@link GeneAssociation} annotation in the {@link ListOfGeneAssociations}.
   * If the index <code>n</code> is invalid, <code>null</code> is returned.
   */ public
 GeneAssociation getGeneAssociation(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getGeneAssociation__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new GeneAssociation(cPtr, false);
  }

  
/**
   * Returns the {@link GeneAssociation} annotation object based on its identifier.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @param sid a string representing the identifier 
   * of the {@link GeneAssociation} annotation to get.
   <p>
   * @return {@link GeneAssociation} annotation in the {@link ListOfGeneAssociations} with the given <code>sid</code>
   * or <code>null</code> if no such {@link GeneAssociation} annotation exists.
   <p>
   * @see #getGeneAssociation(long n)
   * @see #getListOfGeneAssociations()
   */ public
 GeneAssociation getGeneAssociation(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_getGeneAssociation__SWIG_2(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new GeneAssociation(cPtr, false);
  }

  
/**
   * Adds a copy of the given {@link GeneAssociation} annotation object to the list of GeneAssociations.
   <p>
   * @param association the {@link GeneAssociation} annotation object to be added to the list of GeneAssociations.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * <p>
 * @return integer value indicating success/failure of the
 * function.   The possible values
 * returned by this function are:
   * <ul>
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_SUCCESS LIBSBML_OPERATION_SUCCESS}
   * <li> {@link libsbmlConstants#LIBSBML_OPERATION_FAILED LIBSBML_OPERATION_FAILED}
   * <li> {@link libsbmlConstants#LIBSBML_INVALID_OBJECT LIBSBML_INVALID_OBJECT}
   * <li> {@link libsbmlConstants#LIBSBML_LEVEL_MISMATCH LIBSBML_LEVEL_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_VERSION_MISMATCH LIBSBML_VERSION_MISMATCH}
   * <li> {@link libsbmlConstants#LIBSBML_PKG_VERSION_MISMATCH LIBSBML_PKG_VERSION_MISMATCH}
   * </ul>
   */ public
 int addGeneAssociation(GeneAssociation association) {
    return libsbmlJNI.FbcModelPlugin_addGeneAssociation(swigCPtr, this, GeneAssociation.getCPtr(association), association);
  }

  
/**
   * Creates a new {@link GeneAssociation} annotation object and adds it to the list of {@link GeneAssociation} objects
   * and returns it.
   <p>
   * @return a newly created {@link GeneAssociation} annotation object.
   */ public
 GeneAssociation createGeneAssociation() {
    long cPtr = libsbmlJNI.FbcModelPlugin_createGeneAssociation(swigCPtr, this);
    return (cPtr == 0) ? null : new GeneAssociation(cPtr, false);
  }

  
/**
   * Removes the nth {@link GeneAssociation} annotation object from this plugin object and
   * returns a pointer to it.
   <p>
   * The caller owns the returned object and is responsible for
   *  deleting it.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @param n the index of the {@link GeneAssociation} annotation object to remove.
   <p>
   * @return the {@link GeneAssociation} annotation object removed.  As mentioned above, the 
   * caller owns the returned object. <code>null</code> is returned if the 
   * given index is out of range.
   */ public
 GeneAssociation removeGeneAssociation(long n) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeGeneAssociation__SWIG_0(swigCPtr, this, n);
    return (cPtr == 0) ? null : new GeneAssociation(cPtr, false);
  }

  
/**
   * Removes the {@link GeneAssociation} annotation object with the given <code>sid</code> attribute from 
   * this plugin object and returns a pointer to it.
   <p>
   * The caller owns the returned object and is responsible for
   * deleting it.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @param sid the id attribute of the {@link GeneAssociation} annotation object to remove.
   <p>
   * @return the {@link GeneAssociation} annotation object removed.  As mentioned above, the 
   * caller owns the returned object. <code>null</code> is returned if the 
   * given index is out of range.
   */ public
 GeneAssociation removeGeneAssociation(String sid) {
    long cPtr = libsbmlJNI.FbcModelPlugin_removeGeneAssociation__SWIG_1(swigCPtr, this, sid);
    return (cPtr == 0) ? null : new GeneAssociation(cPtr, false);
  }

  
/**
   * Returns the number of {@link GeneAssociation} annotation object in this plugin object.
   <p>
   * <p>
 * @note {@link GeneAssociation} objects are not defined in any version of the
 * 'Flux Balance Constraints' specification, and can only be used for
 * annotation purposes.  Version&nbsp;2 instead defines the 
 * {@link GeneProduct} and {@link GeneProductAssociation} classes to cover the information
 * otherwise encoded here.
   <p>
   * @return the number of {@link GeneAssociation} annotation object in this plugin object.
   */ public
 int getNumGeneAssociations() {
    return libsbmlJNI.FbcModelPlugin_getNumGeneAssociations(swigCPtr, this);
  }

  
/** * @internal */ public
 void connectToChild() {
    libsbmlJNI.FbcModelPlugin_connectToChild(swigCPtr, this);
  }

  
/** * @internal */ public
 void connectToParent(SBase sbase) {
    libsbmlJNI.FbcModelPlugin_connectToParent(swigCPtr, this, SBase.getCPtr(sbase), sbase);
  }

  
/** * @internal */ public
 void enablePackageInternal(String pkgURI, String pkgPrefix, boolean flag) {
    libsbmlJNI.FbcModelPlugin_enablePackageInternal(swigCPtr, this, pkgURI, pkgPrefix, flag);
  }

}
